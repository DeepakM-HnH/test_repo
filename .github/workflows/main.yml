name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Display Start Message
        run: echo "Starting the build process..."

      - name: Change to Project Directory
        run: cd "${{ github.workspace }}"

      - name: Restore Dependencies
        run: dotnet restore TestBuildApp/TestBuildApp.sln

      - name: Build Project
        run: dotnet build TestBuildApp/TestBuildApp.sln

      - name: Create Publish Directory
        run: mkdir -p ${GITHUB_WORKSPACE}/publish

      - name: Display Publish Directory Contents
        run: ls -R ${GITHUB_WORKSPACE}/publish

      - name: Change to Project Directory
        run: cd "${{ github.workspace }}/TestBuildApp"

      - name: Display Directory Contents
        run: ls -R "${{ github.workspace }}/TestBuildApp"

      - name: Publish Application
        run: dotnet publish -c Release -r win-x64 --self-contained -o ${GITHUB_WORKSPACE}/publish TestBuildApp/TestBuildApp.sln
       
      - name: Display Published Artifacts
        run: ls -R ${GITHUB_WORKSPACE}/publish

      - name: Archive Publish Directory
        uses: actions/upload-artifact@v2
        with: 
          name: publish-artifact
          path: ${{ github.workspace }}/publish

  deploy:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Display Start Message
        run: echo "Starting the deployment process..."

      - name: Download Published Artifacts
        uses: actions/download-artifact@v2
        with:
           name: publish-artifact
           path: ${{ github.workspace }}/publish

      - name: Display Downloaded Artifact Contents
        run: ls -R ${GITHUB_WORKSPACE}/publish
        working-directory: ${{ github.workspace }}

      - name: Copy to Deployment Location
        run: cp -r ${GITHUB_WORKSPACE}/publish/* "C:/Deepak/deployment"

      - name: Display Deployment Contents
        run: ls -R "C:/Deepak/deployment"
